{"version":3,"sources":["components/pages/Table/TabItem.js","components/pages/Table/Table.js","components/pages/Form/TaskForm.js","components/pages/Home.js","components/pages/Contact.js","components/pages/About.js","components/layout/Navbar.js","components/pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["TabItem","onUpdateStatus","props","tasks","id","onDelete","onUpdate","this","index","scope","name","address","email","className","status","onClick","type","value","class","Component","Table","elmTasks","map","task","TaskForm","onCloseForm","onChange","event","target","setState","onSubmit","preventDefault","state","onUpdatedata","handleSumbit","onResetInput","prevProps","prevSate","console","log","nextProps","for","aria-describedby","style","textAlign","Home","onToggleForm","isDisplayFrom","taskEditing","data","generateId","push","localStorage","setItem","JSON","stringify","cryptoRandomString","length","findIndex","result","forEach","splice","onShowForm","onUpdateData","getItem","parse","elmTaskForm","float","margin","Contact","About","Navbar","Fragment","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","to","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33441a3d.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass TabItem extends Component {\r\n\r\n  onUpdateStatus = () => {\r\n   \r\n  \r\n        this.props.onUpdateStatus(this.props.tasks.id);\r\n  }\r\n  onDelete = () => {\r\n    this.props.onDelete(this.props.tasks.id);\r\n  }\r\n\r\n  onUpdate = () =>{\r\n    this.props.onUpdate(this.props.tasks.id);\r\n  }\r\n    render() { \r\n\r\n        var {tasks, index} = this.props;\r\n        return (    \r\n            <tr>\r\n            <th scope=\"row\">{index+1}</th>\r\n            <td>{tasks.name}</td>\r\n            <td>{tasks.address}</td>\r\n            <td>{tasks.email}</td>\r\n\r\n            <td className=\"text-center\">\r\n            <span \r\n            className={tasks.status === true ? 'label label-success ' :'label label-danger '}\r\n            onClick={this.onUpdateStatus}\r\n            > {tasks.status === true ? 'Kích hoạt' : 'Ẩn'}</span>\r\n               </td>\r\n            <td><button\r\n             type=\"button\"\r\n             className=\"btn btn-primary\"\r\n             onClick = {this.onUpdate}\r\n             >Sửa</button> &nbsp;  \r\n            <button type=\"button\" value={tasks.id} onClick={this.onDelete}   class=\"btn btn-danger\">Xoá</button>\r\n            </td>\r\n            </tr>);\r\n    }\r\n}\r\n \r\nexport default TabItem;","import React, { Component } from 'react';\r\nimport TabItem from  './TabItem';\r\n\r\nclass Table extends Component {\r\n\r\n    render() { \r\n        var {tasks} = this.props;\r\n        var elmTasks = tasks.map((task,index) =>{\r\n            return <TabItem \r\n            key={task.id} \r\n            index={index} \r\n            tasks={task} \r\n          \r\n            onUpdateStatus = {this.props.onUpdateStatus}\r\n            onDelete = {this.props.onDelete}\r\n            onUpdate = {this.props.onUpdate}/>\r\n        })\r\n\r\n        return ( \r\n            <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Họ tên</th>\r\n                <th scope=\"col\">Địa chỉ</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Trạng thái</th>\r\n                <th scope=\"col\">Thao tác</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {elmTasks}\r\n              \r\n            </tbody>\r\n            </table>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            name:'',\r\n            address:'',\r\n            email:'',\r\n            status: true\r\n        }\r\n    }\r\n\r\n    onCloseForm = () => {\r\n       this.props.onCloseForm();\r\n    }\r\n    onChange = (event) =>{\r\n        var {name, value} = event.target;\r\n        if(name === 'status')\r\n        {\r\n            value = event.target.value === 'true' ? true : false;\r\n        }\r\n        this.setState({\r\n            [name] :value,\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n      \r\n        if(this.state.id !== '')\r\n        {\r\n            this.props.onUpdatedata(this.state);\r\n         \r\n        }\r\n        else\r\n        {\r\n            this.props.handleSumbit(this.state);\r\n        }\r\n       \r\n        this.onResetInput(event);\r\n        this.onCloseForm();\r\n\r\n    }\r\n\r\n    onResetInput = () => {\r\n       \r\n        this.setState({\r\n           name :'',\r\n           email:'',\r\n           address:'',\r\n           status:true\r\n        });\r\n    }\r\n\r\n  \r\n    //bậT thẳng nút  sửa\r\n    componentWillMount (prevProps,prevSate){\r\n      \r\n        console.log(this.props.task);\r\n      if(this.props.task)\r\n      {\r\n          this.setState({\r\n              id : this.props.task.id,\r\n              name : this.props.task.name,\r\n              address : this.props.task.address,\r\n              email : this.props.task.email,\r\n              status : this.props.task.status,\r\n          })\r\n      }\r\n    }\r\n\r\n    //khi bấm nút thêm mà bấm nút sửa cầN sử dụng \r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps && nextProps.task)\r\n        {\r\n            this.setState({\r\n                id : nextProps.task.id,\r\n                name : nextProps.task.name,\r\n                address : nextProps.task.address,\r\n                email : nextProps.task.email,\r\n                status : nextProps.task.status,\r\n            })\r\n        }else if(!nextProps.task)\r\n        {\r\n            this.setState({\r\n                id:'',\r\n                name :'',\r\n                email:'',\r\n                address:'',\r\n                status:true\r\n             });\r\n        }\r\n        \r\n    }\r\n    render() { \r\n         const { name,address,email,status } = this.state;\r\n         var {id} = this.state;\r\n        return ( \r\n            \r\n            <div>\r\n                <div className=\"panel panel-warning\">\r\n                    <div className=\"panel heading\">\r\n                        <h3 className=\"panel-title\">\r\n                          \r\n                            {id !== ''  ? 'Cập nhật người dùng' : 'Thêm người dùng'}\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div >\r\n                        <b for=\"exampleInputEmail1\" class=\"form-label\">Họ tên</b>\r\n                        <input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} id=\"name\" aria-describedby=\"emailHelp\"/>\r\n                    \r\n                    </div>\r\n                    <div >\r\n                        <b for=\"exampleInputPassword1\" class=\"form-label\">Địa chỉ</b>\r\n                        <input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\" value={address} onChange={this.onChange} />\r\n                    </div>\r\n                    <div >\r\n                        <b for=\"exampleInputPassword1\" class=\"form-label\">Email</b>\r\n                        <input type=\"text\" class=\"form-control\" name=\"email\" id=\"email\"  value={email} onChange={this.onChange}/>\r\n                    </div>\r\n                    <div >\r\n                        <b for=\"exampleInputPassword1\" class=\"form-label\">Trạng thái</b>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"status\"\r\n                            value={status}\r\n                            onChange={this.onChange}\r\n                            >\r\n                            <option value={true}>Kích hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                    </div>\r\n                    <br />\r\n                    <div style={{textAlign: 'center'}}>\r\n                    <button type=\"submit\"  class=\"btn btn-primary\">Lưu lại</button> &nbsp;\r\n                    <button type=\"button\" onClick={this.onCloseForm}  class=\"btn btn-danger\">Huỷ bỏ</button>\r\n                    </div>\r\n              \r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TaskForm;","import React,{Component} from 'react';\r\nimport Table from './Table/Table';\r\nimport TaskForm from './Form/TaskForm';\r\nimport cryptoRandomString from 'crypto-random-string';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasks :  [\r\n                {\r\n                    id : this.generateId(),\r\n                    name:'Đỗ Quang Tài',\r\n                    address:'Bắc Ninh',\r\n                    email:'dqtai97@gmail.com',\r\n                    status:true,\r\n        \r\n                },\r\n                {\r\n                    id : this.generateId(),\r\n                    name:'Đỗ Quang Quân',\r\n                    address:'Bắc Ninh',\r\n                    email:'dqtai97@gmail.com',\r\n                    status:true,\r\n        \r\n        \r\n                },\r\n                {\r\n                    id : this.generateId(),\r\n                    name:'Đỗ Quang Tú',\r\n                    address:'Bắc Ninh',\r\n                    email:'dqtai97@gmail.com',\r\n                    status:true,\r\n        \r\n        \r\n                },\r\n                {\r\n                    id : this.generateId(),\r\n                    name:'Đỗ Quang Tỉnh',\r\n                    address:'Bắc Ninh',\r\n                    email:'dqtai97@gmail.com',\r\n                    status:false,\r\n        \r\n        \r\n                }],\r\n            isDisplayFrom:false,\r\n            taskEditing : null\r\n        }\r\n    }\r\n    //WARNING! To be deprecated in React v17. Use componentDidMount instead.\r\n    componentWillMount() {\r\n        if(localStorage && localStorage.getItem('tasks'))\r\n        {\r\n            var tasks =JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({\r\n                tasks:tasks\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    onToggleForm = () =>{\r\n        //thêm task\r\n        if(this.state.isDisplayFrom && this.state.taskEditing !== null)\r\n        {\r\n            this.setState({\r\n                isDisplayFrom : true,\r\n                taskEditing: null\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isDisplayFrom : !this.state.isDisplayFrom,\r\n                taskEditing: null\r\n            })\r\n        }\r\n      \r\n    }\r\n\r\n    onCloseForm = () =>{\r\n        this.setState({\r\n            isDisplayFrom : false\r\n        })\r\n    }\r\n    handleSumbit = data =>{\r\n         var {tasks} = this.state;\r\n         data.id = this.generateId();\r\n         tasks.push(data);\r\n         this.setState({\r\n             tasks:tasks\r\n         })\r\n         localStorage.setItem('tasks',JSON.stringify(tasks));\r\n    }\r\n\r\n    generateId = () =>{\r\n        var id = cryptoRandomString({length: 10, type: 'numeric'});\r\n       return id;\r\n    }\r\n    onUpdateStatus = (id) => {\r\n        var {tasks} = this.state;\r\n        var index = this.findIndex(id);\r\n        //console.log(index);\r\n        if(index !== -1)\r\n        {\r\n            tasks[index].status = !tasks[index].status ;\r\n            this.setState({\r\n                tasks:tasks\r\n            });\r\n            \r\n                localStorage.setItem('tasks',JSON.stringify(tasks))\r\n        }\r\n        this.onCloseForm();\r\n    }\r\n    findIndex = (id) => {\r\n        var {tasks} = this.state;\r\n        var result = -1;\r\n        tasks.forEach((task, index) => {\r\n            if(task.id === id)\r\n            {\r\n                 result = index;\r\n            }  \r\n        });\r\n            return result;\r\n    }\r\n    onDelete = (id) =>{\r\n        const {tasks} = this.state;\r\n        const index = this.findIndex(id);\r\n        if(index !== -1)\r\n        {\r\n            tasks.splice(index,1);\r\n            this.setState({\r\n                tasks:tasks\r\n            });\r\n            \r\n            localStorage.setItem('tasks',JSON.stringify(tasks))\r\n        }\r\n    }\r\n\r\n    onUpdate = (id) =>{\r\n        var {tasks} = this.state;\r\n        var index = this.findIndex(id);\r\n        console.log(index);\r\n        var taskEditing = tasks[index];\r\n        this.setState({\r\n            taskEditing : taskEditing\r\n        });\r\n        this.onShowForm();\r\n        console.log(this.state.taskEditing);\r\n    }\r\n\r\n    onShowForm = () =>{\r\n        this.setState({\r\n            isDisplayFrom:true\r\n        });\r\n    }\r\n    onUpdateData = (data) => {\r\n        var {tasks} = this.state;\r\n        var index = this.findIndex(data.id);\r\n        tasks[index] =  data;\r\n\r\n        this.setState({\r\n            tasks:tasks\r\n        });\r\n        localStorage.setItem('tasks',JSON.stringify(tasks));\r\n    }\r\n    render() { \r\n        var {tasks , isDisplayFrom,taskEditing} = this.state;\r\n        var elmTaskForm = isDisplayFrom ? \r\n        <TaskForm \r\n            onCloseForm = {this.onCloseForm} \r\n            handleSumbit={this.handleSumbit}\r\n            task={taskEditing}\r\n            onUpdatedata = {this.onUpdateData}\r\n        \r\n        /> : '';\r\n        return ( <div className=\"container\">\r\n            <div className=\"text-center\">\r\n                <h1>Quản lý người dùng</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className={isDisplayFrom ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : ''}>\r\n                   {elmTaskForm }\r\n                </div>\r\n                <div className={isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\r\n                    \r\n                    <div  style={{float:'left',margin:'10px'}}><button type=\"button\" className=\"btn btn-primary btn-md\" onClick={this.onToggleForm}>Thêm mới</button></div>\r\n                    <br/>\r\n                    <div>\r\n                        <Table \r\n                        tasks = {tasks} \r\n                        onUpdateStatus={this.onUpdateStatus}\r\n                        onDelete = {this.onDelete} \r\n                        onUpdate = {this.onUpdate}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n     \r\n        \r\n   \r\n    </div> );\r\n    }\r\n}\r\n \r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"py-4\">\r\n          <h1>Contact Page</h1>\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n              <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                id=\"exampleCheck1\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n                Check me out\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n \r\nexport default Contact;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"py-4\">\r\n          <h1>About Page</h1>\r\n          <p className=\"lead\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cumque rerum\r\n            hic ab veniam reiciendis cum repudiandae, voluptate explicabo nesciunt\r\n            nam accusantium? Soluta cupiditate, accusamus commodi praesentium\r\n            laborum dolorum libero maiores!\r\n          </p>\r\n  \r\n          <p className=\"lead\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cumque rerum\r\n            hic ab veniam reiciendis cum repudiandae, voluptate explicabo nesciunt\r\n            nam accusantium? Soluta cupiditate, accusamus commodi praesentium\r\n            laborum dolorum libero maiores!\r\n          </p>\r\n          <p className=\"lead\">Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cumque rerum hic ab veniam reiciendis cum repudiandae, voluptate explicabo nesciunt nam accusantium? Soluta cupiditate, accusamus commodi praesentium laborum dolorum libero maiores!</p>\r\n        </div>\r\n      </div>\r\n    )\r\n    \r\n}\r\n \r\nexport default About;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n  <div className=\"container\">\r\n    <a class=\"navbar-brand\" href=\"/\">React User</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <Link class=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <Link class=\"nav-link\" to=\"/contact\">Contact</Link>\r\n        </li>\r\n   \r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h3 className=\"display-1\">Page not found</h3>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import './App.css';\nimport Home from './components/pages/Home';\nimport Contact from './components/pages/Contact';\nimport About from './components/pages/About';\nimport React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport NotFound from './components/pages/NotFound';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\n\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <Router>\n        <div className=\"App\">\n        <Navbar />\n          {/* <Home /> */}\n        \n          <Switch>\n            <Route exact path=\"/\" component={Home}  />\n            <Route exact path=\"/about\" component={About}  />\n            <Route exact path=\"/contact\" component={Contact}  />\n            <Route component={NotFound}  />\n          </Switch>\n\n        </div>\n      </Router>\n   \n     );\n  }\n}\n \nexport default App;\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Home />\n//       <Contact />\n//       <About />\n//     </div>\n//   );\n// }\n\n//export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}